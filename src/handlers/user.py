from aiogram.types import Message
from aiogram.dispatcher.filters import Command
from src.services.sql import DataBase
from src.bot import bot, dp
from aiogram.types import CallbackQuery
from aiogram import types
from aiogram.utils.callback_data import CallbackData
from aiogram.types import ReplyKeyboardMarkup, KeyboardButton, InlineKeyboardMarkup, InlineKeyboardButton
from aiogram.dispatcher import FSMContext
from aiogram import Bot

import datetime
from datetime import datetime, timedelta

from apscheduler.schedulers.asyncio import AsyncIOScheduler

from src.states.user import User
from src.keyboards.menu import menu
db = DataBase('barber.db')
cb = CallbackData('btn', 'type', 'id')
sheduler = AsyncIOScheduler(timezone='Europe/Moscow')
async def cron(bot: Bot):
    user_id = await db.get_userss()
    for i in user_id:
        datetime_str = await db.get_opp(f'{i[0]}')
        datetime_str = str(datetime_str[0][0])
        datetime_obj = datetime.strptime(datetime_str, '%Y-%m-%d')

        if datetime_obj.date() == datetime.today().date():
            await bot.send_message(i[0], f'–° –≤–∞—à–µ–π –ø–æ—Å–ª–µ–¥–Ω–µ–π —Å—Ç—Ä–∏–∂–∫–∏ –ø—Ä–æ—à–ª–æ –¥–æ—á—Ç–∞—Ç–æ—á–Ω–æ –≤—Ä–µ–º–µ–Ω–∏, –ø–æ—Ä–∞ –±—ã –ø–æ–¥—Å—Ç—Ä–∏—á—å—Å—è')


@dp.message_handler(content_types='photo')
async def photo(message: Message):
    print(message.photo[0].file_id)
@dp.message_handler(Command('start'))
async def start(message: Message):
    await bot.send_message(message.chat.id, f'–ü—Ä–∏–≤–µ—Ç, {message.from_user.first_name}üëã'
                                            f'\n\n –†–∞–¥—ã –í–∞—Å –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–æ–≤–∞—Ç—å –≤ –Ω–∞—à–µ–º –±–æ—Ç–µ –±–∞—Ä–±–µ—Ä—à–æ–ø "–ß–µ—Ç–≤–µ—Ä–≥"'
                                            f'\n\n –ó–¥–µ—Å—å –ø—Ä–∏–≤–µ–¥—É—Ç –≤–∞—à—É –≥–æ–ª–æ–≤—É –≤ –ø–æ—Ä—è–¥–æ–∫üíÜ'
                                            f'\n\n–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –≤ –º–µ–Ω—é –Ω–∏–∂–µüëáüëáüëá')
    if await db.get_users(message.chat.id) == None:
        await db.add_users(message.chat.id)
    await bot.send_message(message.chat.id, "üíà–û–°–ù–û–í–ù–û–ï –ú–ï–ù–Æüíà", reply_markup=menu.menu)

@dp.callback_query_handler(lambda call: call.data == 'action')
async def a(callback: CallbackQuery):
    await bot.send_photo(callback.message.chat.id, photo='AgACAgIAAxkBAAPTZOyVCv4ugXh5_nNNR93ncQw7PWYAAkfOMRvCn2hLOPVLrx3k9scBAAMCAANzAAMwBA')
    await callback.answer()
@dp.callback_query_handler(lambda call: call.data == 'price')
async def a(callback: CallbackQuery):
    await bot.send_photo(callback.message.chat.id, photo='AgACAgIAAxkBAAPTZOyVCv4ugXh5_nNNR93ncQw7PWYAAkfOMRvCn2hLOPVLrx3k9scBAAMCAANzAAMwBA')
    await callback.answer()

@dp.callback_query_handler(lambda call: call.data == 'review')
async def a(callback: CallbackQuery):
    items = await db.get_filials()
    keyboard = InlineKeyboardMarkup()
    for i in items:
        keyboard.add(
            InlineKeyboardButton(f'{i[2]}', callback_data=f'btn:review:{i[1]}')
        )
    await bot.send_message(callback.message.chat.id, '–í—ã–±–µ—Ä–∏—Ç–µ —Ñ–∏–ª–∏–∞–ª, –æ –∫–æ—Ç–æ—Ä–æ–º —Ö–æ—Ç–∏—Ç–µ –æ—Å—Ç–∞–≤–∏—Ç—å –æ—Ç–∑—ã–≤', reply_markup=keyboard)
    await callback.answer()

@dp.callback_query_handler(cb.filter(type='review'))
async def review(call: CallbackQuery, callback_data: dict):
    keyboard = InlineKeyboardMarkup()
    items = await db.get_info_filials(callback_data.get('id'))
    for i in items:
        keyboard.add(
            InlineKeyboardButton(f'Yandex –∫–∞—Ä—Ç—ã', url=f'{i[3]}'),
            InlineKeyboardButton(f'Google –∫–∞—Ä—Ç—ã', url=f'{i[4]}'),
            InlineKeyboardButton(f'2–ì–ò–° –∫–∞—Ä—Ç—ã', url=f'{i[5]}')
        )
    await bot.send_message(call.message.chat.id, '–í–æ—Ç –æ—Ç–∑—ã–≤—ã –¥–∞–Ω–Ω–æ–≥–æ —Ñ–∏–ª–ª–∏–∞–ª–∞', reply_markup=keyboard)
    await call.answer()

@dp.callback_query_handler(lambda call: call.data == 'opp')
async def a(callback: CallbackQuery):
    keyboards = InlineKeyboardMarkup(row_width=1).add(
        InlineKeyboardButton(text='7 –¥–Ω–µ–π - "–°—Ç–∏–ª—å –ë—Ä—ç–¥–∞ –ü–∏—Ç–∞"', callback_data='btn:opp:7'),
        InlineKeyboardButton(text='14 –¥–Ω–µ–π - "–ß–µ—Ç–≤–µ—Ä–≥ —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç"', callback_data='btn:opp:14'),
        InlineKeyboardButton(text='21 –¥–µ–Ω—å - "–û–±—Ä–æ—Å, –Ω–æ –µ—â–µ —Ç–µ—Ä–ø–∏–º–æ"', callback_data='btn:opp:21'),
        InlineKeyboardButton(text='28 –¥–Ω–µ–π - "Face_id —Ç–µ–±—è –Ω–µ —É–∑–Ω–∞–µ—Ç"', callback_data='btn:opp:28'),
    )
    await bot.send_message(callback.message.chat.id, '–ß–µ—Ä–µ–∑ —Å–∫–æ–ª—å–∫–æ –º–Ω–µ –≤–∞–º –Ω–∞–ø–æ–º–Ω–∏—Ç—å?', reply_markup=keyboards)
    await callback.answer()
@dp.callback_query_handler(cb.filter(type='opp'))
async def review(call: CallbackQuery, callback_data: dict):
    days = callback_data.get('id')
    days = int(days)
    datatime = datetime.today().date()
    datetime_opp = datatime + timedelta(days=days)
    sheduler.add_job(cron, kwargs={'bot': bot},
                     trigger='interval',
                     days=1)
    sheduler.start()
    await db.update_opp(datetime_opp, call.message.chat.id)
    await bot.send_message(call.message.chat.id, f'–•–æ—Ä–æ—à–æ, —è –Ω–∞–ø–æ–º–Ω—é –≤–∞–º —á–µ—Ä–µ–∑ {callback_data.get("id")} –¥–Ω–µ–π', reply_markup=menu.menu)

@dp.callback_query_handler(lambda call: call.data == 'adres')
async def a(callback: CallbackQuery):
    items = await db.get_filials()
    keyboard = InlineKeyboardMarkup()
    for i in items:
        keyboard.add(
            InlineKeyboardButton(f'{i[2]}', url=f'{i[6]}')
        )
    await bot.send_message(callback.message.chat.id, '–ö–∞–Ω–∞–ª —ç—Ç–æ–≥–æ —Ñ–∏–ª–∏–∞–ª–∞üëá',
                           reply_markup=keyboard)
    await callback.answer()

@dp.callback_query_handler(lambda call: call.data == 'contacts')
async def a(callback: CallbackQuery):
    await bot.send_message(callback.message.chat.id, '–ù–∞—à–∏ –∫–æ–Ω—Ç–∞–∫—Ç—ã'
                                                     '\n\n –ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞: +79677636976', reply_markup=InlineKeyboardMarkup(row_width=1).add(
        InlineKeyboardButton('Vk', url='https://vk.com/4etvergnn'),
        InlineKeyboardButton('Inst', url='https://goo.su/k4hp4V0')
    ))

@dp.callback_query_handler(lambda call: call.data == 'questions')
async def a(callback: CallbackQuery):
    await bot.send_message(callback.message.chat.id, '–ù–∞–ø–∏—à–∏—Ç–µ –≤–∞—à –≤–æ–ø—Ä–æ—Å. –û—Ç–≤–µ—Ç–∏–º –±—ã—Å—Ç—Ä–µ–µ —á–µ–º –±–∞—Ä–±–µ—Ä –ø–æ–¥—Å—Ç—Ä–∏–∂–µ—Ç –¥–≤—É—Ö –ª—é–¥–µ–π‚ö°Ô∏è'
                                                     '\n\n–ß—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –Ω–∞–∂–º–∏—Ç–µ "–ù–∞–∑–∞–¥"', reply_markup=menu.back)

    await User.questions.set()

@dp.message_handler(text='–ù–∞–∑–∞–¥', state=User.questions)
async def a(message: Message, state: FSMContext):
    await bot.send_message(message.chat.id, ''
                                            '\n\n–ú—ã –ø–µ—Ä–µ–Ω–µ—Å–ª–∏ –≤–∞—Å –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', reply_markup=menu.menu)
    await state.finish()


@dp.message_handler(content_types='text', state=User.questions)
async def a(message: Message, state: FSMContext):
    text = message.text
    await bot.send_message(chat_id='-1001930660607', text='<b>–í–æ–ø—Ä–æ—Å</b>'
                                                          f'\n\n{text}'
                                                          f'\n\n–í–æ–ø—Ä–æ—Å –∑–∞–¥–∞–ª @{message.from_user.username}',
                           parse_mode=types.ParseMode.HTML)
    await bot.send_message(message.chat.id, '–°–ø–∞—Å–∏–±–æ –∑–∞ –≤–æ–ø—Ä–æ—Å, —É–∂–µ –ø–∏—à–µ–º –Ω–∞ –Ω–µ–≥–æ –æ—Ç–≤–µ—Ç.'
                                            '\n\n–ú—ã –ø–µ—Ä–µ–Ω–µ—Å–ª–∏ –≤–∞—Å –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', reply_markup=menu.menu)
    await state.finish()

@dp.callback_query_handler(lambda call: call.data == 'queue')
async def a(callback: CallbackQuery):
    items = await db.get_filials()
    keyboard = InlineKeyboardMarkup()
    for i in items:
        keyboard.add(
            InlineKeyboardButton(f'{i[2]}', url=f'{i[7]}')
        )
    await bot.send_message(callback.message.chat.id, '–í—ã–±–µ—Ä–∏—Ç–µ —Ñ–∏–ª–∏–∞–ª',
                           reply_markup=keyboard)

@dp.callback_query_handler(lambda call: call.data == 'about_we')
async def a(callback: CallbackQuery):
    await bot.send_photo(callback.message.chat.id, photo='AgACAgIAAxkBAAIBVmTsthaAmNvPd-viN9IuwGPwpttHAAJGzjEbwp9oSxmCbWP2IuYkAQADAgADcwADMAQ', caption=''
                                                                     '\n\n–ü—Ä–∏–≤–µ—Ç! –ú—ã —Å–µ—Ç—å –±–∞—Ä–±–µ—Ä—à–æ–ø–æ–≤ "–ß–µ—Ç–≤–µ—Ä–≥" - —Ç–µ—Ä—Ä–∏—Ç–æ—Ä–∏—è –º—É–∂—Å–∫–æ–≥–æ —Å—Ç–∏–ª—è. –£ –Ω–∞—Å –∫—Ä—É—Ç–∞—è –∞—Ç–º–æ—Å—Ñ–µ—Ä–∞ –∏ –∫–∞—á–µ—Å—Ç–≤–æ –¥–ª—è —Ç–µ—Ö, –∫—Ç–æ —Ü–µ–Ω–∏—Ç —Å–≤–æ–µ –≤—Ä–µ–º—è.'
                                                                     '\n\nüóì–°—Ç—Ä–∏–∂–µ–º –±–µ–∑ –∑–∞–ø–∏—Å–∏ —Å 10:00 –¥–æ 21:00 '
                                                                     '\n\nüìù–†–∞–±–æ—Ç–∞–µ–º –±–µ–∑ –∑–∞–ø–∏—Å–∏ '
                                                                     '\n\nüí∞–°—Ç—Ä–∏–∂–∫–∏ –æ—Ç 200 —Ä—É–±–ª–µ–π'
                                                                     '\n\nü§å –®–µ—Å—Ç–∞—è —Å—Ç—Ä–∏–∂–∫–∞ –±–µ—Å–ø–ª–∞—Ç–Ω–æ '
                                                                     '\n\n‚è± –í—Ä–µ–º—è —Å—Ç—Ä–∏–∂–∫–∏ 30 –º–∏–Ω—É—Ç'
                                                                     '\n\n‚òéÔ∏è +7 (967)-763-69-76')